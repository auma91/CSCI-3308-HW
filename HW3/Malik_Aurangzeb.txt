Homework #3
Your name: Aurangzeb Malik


---------------------------------------- Question 1 Query ---------------------------------------- 

postgres=# SELECT last_name,first_name,hire_date FROM employees WHERE hire_date <= '2014-04-14' AND country != 'UK' ORDER BY last_name;

---------------------------------------- Question 1 Results ---------------------------------------- 					


 last_name | first_name | hire_date  
-----------+------------+------------
 Callahan  | Laura      | 1994-03-05
 Davolio   | Nancy      | 1992-05-01
 Fuller    | Andrew     | 1992-08-14
 Leverling | Janet      | 1992-04-01
 Peacock   | Margaret   | 1993-05-03
(5 rows)


---------------------------------------- Question 2 Query ---------------------------------------- 

postgres=# SELECT product_id, product_name, units_in_stock, unit_price  FROM productS WHERE units_in_stock < reorder_level AND units_in_stock > 0;

---------------------------------------- Question 2 Results ---------------------------------------- 					

 product_id |       product_name        | units_in_stock | unit_price 
------------+---------------------------+----------------+------------
          2 | Chang                     |             17 |         19
          3 | Aniseed Syrup             |             13 |         10
         11 | Queso Cabrales            |             22 |         21
         21 | Sir Rodney's Scones       |              3 |         10
         30 | Nord-Ost Matjeshering     |             10 |      25.89
         32 | Mascarpone Fabioli        |              9 |         32
         37 | Gravad lax                |             11 |         26
         43 | Ipoh Coffee               |             17 |         46
         45 | Rogede sild               |              5 |        9.5
         48 | Chocolade                 |             15 |      12.75
         49 | Maxilaku                  |             10 |         20
         56 | Gnocchi di nonna Alice    |             21 |         38
         64 | Wimmers gute Semmelknödel |             22 |      33.25
         66 | Louisiana Hot Spiced Okra |              4 |         17
         68 | Scottish Longbreads       |              6 |       12.5
         70 | Outback Lager             |             15 |         15
         74 | Longlife Tofu             |              4 |         10
(17 rows)


---------------------------------------- Question 3 Query ---------------------------------------- 

postgres=# SELECT product_name, unit_price FROM products WHERE unit_price = (SELECT MIN(unit_price) FROM products);

---------------------------------------- Question 3 Results ---------------------------------------- 					


 product_name | unit_price 
--------------+------------
 Geitost      |        2.5
(1 row)


---------------------------------------- Question 4 Query ---------------------------------------- 

postgres=# SELECT product_id,product_name, unit_price*units_in_stock as total_inventory_value FROM products WHERE units_in_stock*unit_price < 200 ORDER BY

---------------------------------------- Question 4 Results ---------------------------------------- 					

 (units_in_stock*unit_price);
 product_id |       product_name        | total_inventory_value 
------------+---------------------------+-----------------------
         29 | Thüringer Rostbratwurst   |                     0
          5 | Chef Anton's Gumbo Mix    |                     0
         53 | Perth Pasties             |                     0
         17 | Alice Mutton              |                     0
         31 | Gorgonzola Telino         |                     0
         21 | Sir Rodney's Scones       |                    30
         74 | Longlife Tofu             |                    40
         45 | Rogede sild               |                  47.5
         66 | Louisiana Hot Spiced Okra |                    68
         68 | Scottish Longbreads       |                    75
         24 | Guaraná Fantástica        |                    90
          3 | Aniseed Syrup             |                   130
         13 | Konbu                     |                   144
         54 | Tourtière                 |      156.449995994568
         48 | Chocolade                 |                191.25
(15 rows)


---------------------------------------- Question 5 Query ---------------------------------------- 

postgres=# SELECT DISTINCT ship_country,COUNT(*) FROM orders WHERE ship_country !='USA' and (shipped_date < '1996-09-01' AND shipped_date > '1996-07-31') GROUP BY ship_country;
---------------------------------------- Question 5 Results ---------------------------------------- 					

 ship_country | count 
--------------+-------
 Brazil       |     1
 Finland      |     1
 France       |     2
 Germany      |     7
 Italy        |     1
 Mexico       |     1
 Spain        |     2
 Sweden       |     2
 UK           |     1
 Venezuela    |     2
(10 rows)

---------------------------------------- Question 6 Query ---------------------------------------- 

postgres=# SELECT * FROM (SELECT DISTINCT customer_id, COUNT(customer_id) as customer_orders FROM orders GROUP BY customer_id) ss WHERE customer_orders < 4 ORDER BY customer_id DESC;

---------------------------------------- Question 6 Results ---------------------------------------- 					

 customer_id | customer_orders 
-------------+-----------------
 TRAIH       |               3
 THECR       |               3
 NORTS       |               3
 LAZYK       |               2
 LAUGB       |               3
 GROSR       |               2
 FRANR       |               3
 CONSH       |               3
 CENTC       |               1
 BOLID       |               3
(10 rows)



---------------------------------------- Question 7 Query ---------------------------------------- 


 product_id |           product_name           | supplier_id | category_id |  quantity_per_unit   | unit_price | units_in_stock | units_on_order | reorder_level | discontinued 
------------+----------------------------------+-------------+-------------+----------------------+------------+----------------+----------------+---------------+--------------

postgres=# SELECT * FROM(SELECT supplier_id, SUM(value) as total_value, COUNT(DISTINCT product_id) AS total_products FROM (SELECT *, units_in_stock*unit_price AS value FROM products) foo GROUP BY supplier_id) foo2 WHERE total_products > 3;

---------------------------------------- Question 7 Results ---------------------------------------- 					

 supplier_id |   total_value    | total_products 
-------------+------------------+----------------
           2 |  2833.7999420166 |              4
           7 | 4409.65005874634 |              5
           8 | 4276.99999523163 |              5
          12 | 3301.84996032715 |              5
(4 rows)

---------------------------------------- Question 8 Query ---------------------------------------- 

postgres=# SELECT DISTINCT suppliers.company_name, products.product_name, products.unit_price FROM products, suppliers WHERE suppliers.country = 'France' and suppliers.supplier_id = products.supplier_id ORDER BY products.unit_price DESC;

---------------------------------------- Question 8 Results ---------------------------------------- 					

        company_name        |      product_name      | unit_price 
----------------------------+------------------------+------------
 Aux joyeux ecclésiastiques | Côte de Blaye          |      263.5
 Gai pâturage               | Raclette Courdavault   |         55
 Gai pâturage               | Camembert Pierrot      |         34
 Aux joyeux ecclésiastiques | Chartreuse verte       |         18
 Escargots Nouveaux         | Escargots de Bourgogne |      13.25
(5 rows)

---------------------------------------- Question 9 Query ---------------------------------------- 

postgres=# SELECT * FROM (SELECT employees.last_name, employees.first_name, employees.title, employees.extension, COUNT(orders.employee_id) AS order_count FROM employees, orders WHERE employees.employee_id = orders.employee_id GROUP BY employees.last_name, employees.first_name, employees.title, employees.extension) foo WHERE order_count < 75;

---------------------------------------- Question 9 Results ---------------------------------------- 					

 last_name | first_name |        title         | extension | order_count 
-----------+------------+----------------------+-----------+-------------
 Suyama    | Michael    | Sales Representative | 428       |          67
 Buchanan  | Steven     | Sales Manager        | 3453      |          42
 King      | Robert     | Sales Representative | 465       |          72
 Dodsworth | Anne       | Sales Representative | 452       |          43
(4 rows)	

---------------------------------------- Question 10 Query ---------------------------------------- 

CREATE TABLE IF NOT EXISTS top_items(item_id INTEGER, item_code INTEGER, item_name VARCHAR(40), inventory_date DATE, supplier_id INTEGER, item_quantity INTEGER,  item_price DECIMAL (9,2));
	
---------------------------------------- Question 11 Query ---------------------------------------- 

 product_id |           product_name           | supplier_id | category_id |  quantity_per_unit   | unit_price | units_in_stock | units_on_order | reorder_level | discontinued 
------------+----------------------------------+-------------+-------------+----------------------+------------+----------------+----------------+---------------+--------------
INSERT INTO top_items SELECT product_id, category_id,product_name, foo.now, units_in_stock, unit_price, supplier_id FROM products, (SELECT NOW()) AS foo WHERE units_in_stock*unit_price > 2500;

---------------------------------------- Question 12 Query ---------------------------------------- 

DELETE FROM ONLY top_items WHERE item_quantity < 50;

---------------------------------------- Question 13 Query ---------------------------------------- 

ALTER TABLE top_items ADD COLUMN inventory_value DECIMAL (9,2) DEFAULT 0;

---------------------------------------- Question 14 Query ---------------------------------------- 

UPDATE top_items SET inventory_value = top_items.item_quantity * top_items.item_price ;


---------------------------------------- Question 15 Query ---------------------------------------- 

DROP TABLE top_items;

